version: "3.9"
services:
  dist:
    image: selkies-gstreamer-py-build
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYPI_PACKAGE: selkies-gstreamer
        PACKAGE_VERSION: 1.0.0-dev
  web:
    image: gst-web
    build:
      context: ./addons/gst-web
      dockerfile: Dockerfile
  test:
    ###
    # NOTE: export the UBUNTU_RELEASE env var to change the base image during build and run.
    ###

    # TODO: privileged is only required when using Ubuntu 22.04
    #privileged: true

    image: selkies-gstreamer-example:latest-ubuntu${UBUNTU_RELEASE:-20.04}
    entrypoint: ["/tini", "--", "/bin/bash"]
    build:
      context: .
      dockerfile: Dockerfile.example
      args:
        UBUNTU_RELEASE: ${UBUNTU_RELEASE:-20.04}

        # Testing with gstreamer build in-repo:
        # 1. (cd addons/gstreamer && docker build --build-arg UBUNTU_RELEASE=${UBUNTU_RELEASE?} -t gstreamer:latest-ubuntu${UBUNTU_RELEASE?} .)
        # 2. export GSTREAMER_BASE_IMAGE=gstreamer
        # 3. docker-compose build test
        GSTREAMER_BASE_IMAGE: ${GSTREAMER_BASE_IMAGE:-ghcr.io/selkies-project/selkies-gstreamer/gstreamer}
        GSTREAMER_BASE_IMAGE_RELEASE: ${GSTREAMER_BASE_IMAGE_RELEASE:-master}

        PY_BUILD_IMAGE: selkies-gstreamer-py-build:latest
        WEB_IMAGE: gst-web:latest
        PYPI_PACKAGE: selkies_gstreamer
        PACKAGE_VERSION: 0.0.0.dev0
    environment:
      # Basic authentication
      ENABLE_BASIC_AUTH: ${ENABLE_BASIC_AUTH}
      BASIC_AUTH_USER: ${BASIC_AUTH_USER}
      BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}

      # TURN with shared secret or user/pass
      TURN_SHARED_SECRET: ${TURN_SHARED_SECRET}
      TURN_HOST: ${TURN_HOST}
      TURN_PORT: ${TURN_PORT}
      TURN_USERNAME: ${TURN_USERNAME}
      TURN_PASSWORD: ${TURN_PASSWORD}

      # Turn with coTURN web
      COTURN_WEB_URI: ${COTURN_WEB_URI}
      COTURN_WEB_USERNAME: ${COTURN_WEB_USERNAME}
      COTURN_AUTH_HEADER_NAME: ${COTURN_AUTH_HEADER_NAME}

      # Additional server-side settings.
      WEBRTC_ENABLE_RESIZE: ${WEBRTC_ENABLE_RESIZE}

      # DEBUG remote cursors
      DEBUG_CURSORS: ${DEBUG_CURSORS:-false}

      # Start full XFCE4 session, vs just X11 server.
      START_XFCE4: ${START_XFCE4:-true}
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ./src/selkies_gstreamer
        # Change python3.8 to python3.6 in 18.04 and python3.10 in 22.04
        target: /usr/local/lib/python3.8/dist-packages/selkies_gstreamer
        read_only: true

    # Configure for interactive session
    stdin_open: true
    tty: true

