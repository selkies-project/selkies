# Example docker build:
#   docker build \
#        --build-arg=DEBFULLNAME="Dan Isla" \
#        --build-arg=DEBEMAIL=dan.isla@gmail.com \
#        --build-arg=PKG_NAME=selkies-js-interposer \
#        --build-arg=PKG_VERSION=0.0.1 \
#        --build-arg=DISTRIB_RELEASE=24.04 \
#        -t selkies-js-interposer-deb:latest -f Dockerfile.debian_debpkg .

ARG DISTRIB_RELEASE=12
FROM debian:${DISTRIB_RELEASE} AS build

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install --no-install-recommends -y \
        build-essential \
        gzip \
        tar && \
    if [ "$(dpkg --print-architecture)" = "amd64" ]; then apt-get update && apt-get install --no-install-recommends -y gcc-multilib; fi && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /var/log/* /tmp/* /var/tmp/*

ARG PKG_NAME="selkies-js-interposer"
ARG PKG_VERSION="0.0.0"
ARG DEBFULLNAME="Dan Isla"
ARG DEBEMAIL="danisla@users.noreply.github.com"

WORKDIR /opt/build
COPY . .
RUN ./build_debian_deb.sh && \
    tar -czvf /opt/${PKG_NAME}_${PKG_VERSION}.tar.gz selkies_joystick_interposer*.so

ARG DISTRIB_RELEASE
FROM debian:${DISTRIB_RELEASE} AS test
ARG PKG_NAME
ARG PKG_VERSION
ARG DEBFULLNAME
ARG DEBEMAIL

ARG DEBIAN_FRONTEND=noninteractive

COPY --from=build /opt/${PKG_NAME}_${PKG_VERSION}.deb /opt/${PKG_NAME}_${PKG_VERSION}.deb
COPY --from=build /opt/${PKG_NAME}_${PKG_VERSION}.tar.gz /opt/${PKG_NAME}_${PKG_VERSION}.tar.gz

WORKDIR /opt

RUN apt-get update && apt-get install --no-install-recommends -y \
        gcc \
        file \
        /opt/${PKG_NAME}_${PKG_VERSION}.deb && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/debconf/* /var/log/* /tmp/* /var/tmp/*

RUN file "/usr/lib/$(gcc -print-multiarch | sed -e 's/i.*86/i386/')/selkies_joystick_interposer.so" && \
    if [ "$(dpkg --print-architecture)" = "amd64" ]; then file "/usr/lib/$(gcc -m32 -print-multiarch | sed -e 's/i.*86/i386/')/selkies_joystick_interposer.so"; fi
