options:
  machineType: 'E2_HIGHCPU_8'

timeout: 1800s

substitutions:
  _USE_CACHE: "true"
  _COMPONENT: "gstreamer"
  _IMAGE_PREFIX: "selkies"
  _IMAGE_POSTFIX: "base"
  _PRIMARY_TAG: "latest"
  _SECONDARY_TAG: "dev"

tags:
  - selkies-gstreamer-base-image

###
# Images to be pushed
###
images: [
    'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_COMPONENT}-${_IMAGE_POSTFIX}:${_PRIMARY_TAG}',
    'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_COMPONENT}-${_IMAGE_POSTFIX}:${_SECONDARY_TAG}',
]

steps:
###
# App Image
###
- name: 'gcr.io/cloud-builders/docker'
  id: image-pull
  entrypoint: 'bash'
  args: ["-c", "if [[ '${_USE_CACHE}' == 'true' ]]; then (docker pull gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_COMPONENT}-${_IMAGE_POSTFIX}:${_SECONDARY_TAG} || exit 0); fi"]
  waitFor: ["-"]
- name: 'gcr.io/cloud-builders/docker'
  id: image
  args: [
            'build',
            '-t', 'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_COMPONENT}-${_IMAGE_POSTFIX}:${_PRIMARY_TAG}',
            '--cache-from', 'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_COMPONENT}-${_IMAGE_POSTFIX}:${_SECONDARY_TAG}',
            '.'
        ]
  waitFor:
    - image-pull
- name: 'gcr.io/cloud-builders/docker'
  id: image-tags
  args: [
            'tag',
            'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_COMPONENT}-${_IMAGE_POSTFIX}:${_PRIMARY_TAG}',
            'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_COMPONENT}-${_IMAGE_POSTFIX}:${_SECONDARY_TAG}',
        ]
  waitFor:
    - image
